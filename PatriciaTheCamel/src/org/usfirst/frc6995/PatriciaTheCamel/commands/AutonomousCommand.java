// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6995.PatriciaTheCamel.commands;
import org.usfirst.frc6995.PatriciaTheCamel.RobotMap;

import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class AutonomousCommand extends Command {

	static int cycleDelay = 0;

    
    public AutonomousCommand() {
    	super();
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    	System.out.println("Auto Command INIT");
    	RobotMap.drivebaseDriveLeft.getSensorCollection().setQuadraturePosition(0, 0);
    	RobotMap.drivebaseDriveRight.getSensorCollection().setQuadraturePosition(10000, 0);
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    	
    	if (0 >= cycleDelay) {
        	System.out.print("Drive base encoders L:");
        	System.out.print(RobotMap.drivebaseDriveLeft.getSensorCollection().getQuadraturePosition());
        	System.out.print(" R:");
        	System.out.print(RobotMap.drivebaseDriveRight.getSensorCollection().getQuadraturePosition());
        	System.out.println("");
        	
        	cycleDelay = 5;
    	}
    	else {
    		cycleDelay -= 1;
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
