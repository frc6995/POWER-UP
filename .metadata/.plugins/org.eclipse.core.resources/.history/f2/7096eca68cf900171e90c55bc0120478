package org.usfirst.frc6995.NOMAD.commands;

import org.usfirst.frc6995.NOMAD.Robot;
import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class grabberCom extends Command {

    public grabberCom() {
        // Use requires() here to declare subsystem dependencies
        requires(Robot.PNEUMATICS);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	Robot.PNEUMATICS.closeCylinder();
    }

    // Called repeatedly when this Command is scheduled to run
    boolean toggle = true;
    boolean grabbed = false;
    protected void execute() {
    	
    	if (grab && b) {    //If the toggle is on and the user is pressing the b button start the if statement
            toggle = false;     //sets the toggle to false once you start it.
            if (grabbed) {        //if the servo boolean variable is true when you press the button move the grippers in.
                grabbed = false;      //sets the boolean variable to false to make sure the program doesn't try to loop this part if you keep pressing b.
                robot.glyphGrabLeft.setPosition(0.7); //sets the positions to which the servos move to.
                robot.glyphGrabRight.setPosition(0.3);
            } else {            //if the servo variable is false when you press the button close the grippers.
                grabbed = true;       //sets the variable to true for the next time you press the button.
                robot.glyphGrabLeft.setPosition(1); //sets the positions to which the servos return to.
                rob.glyphGrabRight.setPosition(0);
            }
        }
        //makes sure that if you are not pressing the b button the toggle variable is true so the toggle doesnt auto trigger.
        else if (!b) {
            toggle = true;
        }
    	
    	
    	if (Robot.CONTROLS.joystick.getRawButton(2) && !grabbed) {
    		grabbed = true;
			Robot.PNEUMATICS.openCylinder();
		}
    	else if (Robot.CONTROLS.joystick.getRawButton(2)&& grabbed) {
			grabbed = false;
			Robot.PNEUMATICS.openCylinder();
		}
    	
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
